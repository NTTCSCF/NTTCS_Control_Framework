# Generated by Django 4.2.2 on 2023-07-14 08:18

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AsociacionMarcos',
            fields=[
                ('marco_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('nombre_tabla', models.CharField(blank=True, max_length=255, null=True)),
                ('comentario2', models.TextField(blank=True, null=True)),
                ('comentario', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'asociacion_marcos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('domain', models.CharField(blank=True, db_column='Domain', max_length=255, null=True)),
                ('selected', models.CharField(blank=True, db_column='Selected', max_length=255, null=True)),
                ('control', models.CharField(blank=True, db_column='Control', max_length=255, null=True)),
                ('id', models.CharField(db_column='ID', max_length=255, primary_key=True, serialize=False)),
                ('control_description', models.CharField(blank=True, db_column='Control Description', max_length=255, null=True)),
                ('methods_to_comply_with_control', models.CharField(blank=True, db_column='Methods To Comply With Control', max_length=255, null=True)),
                ('evidence_request_references', models.CharField(blank=True, db_column='Evidence Request References', max_length=255, null=True)),
                ('control_question', models.CharField(blank=True, db_column='Control Question', max_length=255, null=True)),
                ('campo9', models.CharField(blank=True, db_column='Campo9', max_length=255, null=True)),
                ('campo10', models.TextField(blank=True, db_column='Campo10', null=True)),
                ('campo11', models.TextField(blank=True, db_column='Campo11', null=True)),
                ('campo12', models.TextField(blank=True, db_column='Campo12', null=True)),
                ('campo13', models.TextField(blank=True, db_column='Campo13', null=True)),
                ('campo14', models.TextField(blank=True, db_column='Campo14', null=True)),
                ('assessment_question_evidences_comments', models.CharField(blank=True, db_column='Assessment Question/Evidences Comments', max_length=255, null=True)),
                ('assesed_result', models.CharField(blank=True, db_column='Assesed result', max_length=255, null=True)),
                ('control_assessment_comments2', models.CharField(blank=True, db_column='Control Assessment Comments2', max_length=255, null=True)),
                ('comentario2', models.TextField(blank=True, null=True)),
                ('comentario', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'assessment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Assessmentguardados',
            fields=[
                ('id_assessment', models.CharField(db_column='ID_assessment', max_length=100, primary_key=True, serialize=False)),
                ('marcos', models.TextField(blank=True, null=True)),
                ('archivado', models.IntegerField(blank=True, null=True)),
                ('comentario2', models.TextField(blank=True, null=True)),
                ('comentario', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'assessmentguardados',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(db_column='ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('ntt_id', models.BigAutoField(db_column='NTT_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(db_column='ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(db_column='ID', primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Domains',
            fields=[
                ('identifier', models.CharField(db_column='Identifier', max_length=255, primary_key=True, serialize=False)),
                ('domain', models.CharField(blank=True, db_column='Domain', max_length=255, null=True)),
                ('security_privacy_by_design_s_p_principles', models.CharField(blank=True, db_column='Security & Privacy by Design (S|P) Principles', max_length=255, null=True)),
                ('principle_intent', models.TextField(blank=True, db_column='Principle Intent', null=True)),
                ('comentario2', models.TextField(blank=True, null=True)),
                ('comentario', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'domains',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Evidencerequestcatalog',
            fields=[
                ('evidence_request_references', models.CharField(db_column='Evidence Request References', max_length=255, primary_key=True, serialize=False)),
                ('area_of_focus', models.CharField(blank=True, db_column='Area of Focus', max_length=255, null=True)),
                ('artifact', models.CharField(blank=True, db_column='Artifact', max_length=255, null=True)),
                ('artifact_description', models.TextField(blank=True, db_column='Artifact Description', null=True)),
                ('control_mappings', models.CharField(blank=True, db_column='Control Mappings', max_length=255, null=True)),
                ('comentario2', models.TextField(blank=True, null=True)),
                ('comentario', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'evidencerequestcatalog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Evidencias',
            fields=[
                ('evidencia_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('comentario', models.TextField(blank=True, db_column='Comentario', null=True)),
                ('links', models.TextField(blank=True, null=True)),
                ('control_id', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'evidencias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MaturirtyTable',
            fields=[
                ('ccmmcod', models.CharField(blank=True, db_column='CCMMCOD', max_length=255, null=True)),
                ('description', models.CharField(blank=True, db_column='DESCRIPTION', max_length=255, null=True)),
                ('sublevels', models.CharField(db_column='SUBLEVELS', max_length=255, primary_key=True, serialize=False)),
                ('percentage', models.FloatField(blank=True, db_column='PERCENTAGE', null=True)),
            ],
            options={
                'db_table': 'maturirty table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NttcsCf20231',
            fields=[
                ('domain', models.CharField(blank=True, db_column='Domain', max_length=255, null=True)),
                ('selected_y_n_field', models.CharField(blank=True, db_column='Selected? (Y/N)', max_length=255, null=True)),
                ('control', models.CharField(blank=True, db_column='Control', max_length=255, null=True)),
                ('id', models.CharField(db_column='ID', max_length=255, primary_key=True, serialize=False)),
                ('control_description', models.CharField(blank=True, db_column='Control Description', max_length=255, null=True)),
                ('relative_control_weighting', models.FloatField(blank=True, db_column='Relative Control Weighting', null=True)),
                ('function_grouping', models.CharField(blank=True, db_column='Function Grouping', max_length=255, null=True)),
                ('scrm1', models.CharField(blank=True, db_column='SCRM1', max_length=255, null=True)),
                ('scrm2', models.CharField(blank=True, db_column='SCRM2', max_length=255, null=True)),
                ('scrm3', models.CharField(blank=True, db_column='SCRM3', max_length=255, null=True)),
                ('assesed_result', models.CharField(blank=True, db_column='Assesed result', max_length=255, null=True)),
                ('numeric_result', models.CharField(blank=True, db_column='Numeric result', max_length=255, null=True)),
                ('weighted_numeric_result', models.FloatField(blank=True, db_column='Weighted Numeric result', null=True)),
                ('assessment_comments', models.CharField(blank=True, db_column='Assessment Comments', max_length=255, null=True)),
                ('relative_result_by_function', models.FloatField(blank=True, db_column='Relative result by Function', null=True)),
                ('relative_result_by_domain', models.FloatField(blank=True, db_column='Relative result by Domain', null=True)),
            ],
            options={
                'db_table': 'nttcs cf 2023 1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RiskCatalog',
            fields=[
                ('risk_grouping', models.CharField(blank=True, db_column='Risk Grouping', max_length=255, null=True)),
                ('risk_id', models.CharField(db_column='Risk ID', max_length=255, primary_key=True, serialize=False)),
                ('risk', models.CharField(blank=True, db_column='Risk', max_length=255, null=True)),
                ('description_of_possible_risk_due_to_control_deficiency', models.CharField(blank=True, db_column='Description of Possible Risk Due To Control Deficiency', max_length=255, null=True)),
                ('frequency', models.CharField(blank=True, db_column='Frequency', max_length=255, null=True)),
                ('freqnum', models.FloatField(blank=True, db_column='FreqNum', null=True)),
                ('impact', models.CharField(blank=True, db_column='Impact', max_length=255, null=True)),
                ('impactnum', models.FloatField(blank=True, db_column='ImpactNum', null=True)),
                ('risk_val', models.FloatField(blank=True, db_column='Risk Val', null=True)),
                ('function', models.CharField(blank=True, db_column='Function', max_length=255, null=True)),
            ],
            options={
                'db_table': 'risk catalog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeleccionAssessment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('seleccion', models.CharField(blank=True, max_length=255, null=True)),
                ('valor', models.CharField(blank=True, max_length=255, null=True)),
                ('comentario2', models.TextField(blank=True, null=True)),
                ('comentario', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'homepage_seleccionassessment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ThreatCatalog',
            fields=[
                ('threat_group', models.CharField(blank=True, db_column='Threat Group', max_length=255, null=True)),
                ('threat_id', models.CharField(db_column='Threat ID', max_length=255, primary_key=True, serialize=False)),
                ('threat', models.CharField(blank=True, db_column='Threat', max_length=255, null=True)),
                ('threat_description', models.TextField(blank=True, db_column='Threat Description', null=True)),
            ],
            options={
                'db_table': 'threat catalog',
                'managed': False,
            },
        ),
    ]
